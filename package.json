{
  "name": "confres",
  "version": "3.1.0",
  "author": "Maciej Kaczmarek <maciej@kaczmarek.io>",
  "license": "MIT",
  "description": "Painless configuration resolver.",
  "repository": {
    "type": "git",
    "url": "https://github.com/mckacz/confres.git"
  },
  "main": "./lib/exports.js",
  "types": "./lib/exports.d.ts",
  "scripts": {
    "prebuild": "rimraf lib",
    "build": "tsc",
    "lint": "eslint . --ext .ts",
    "test": "jest"
  },
  "packageManager": "yarn@3.5.0",
  "dependencies": {
    "callsites": "^3.0.0",
    "dotenv": "^16.3.1",
    "lodash": "^4.17.21"
  },
  "peerDependencies": {
    "ajv": "^8.12.0",
    "chalk": "^4.1.2",
    "js-yaml": "^4.1.0",
    "yup": "^0.32.11"
  },
  "peerDependenciesMeta": {
    "ajv": {
      "optional": true
    },
    "chalk": {
      "optional": true
    },
    "js-yaml": {
      "optional": true
    },
    "yup": {
      "optional": true
    }
  },
  "files": [
    "lib",
    "LICENSE",
    "README.md"
  ],
  "keywords": [
    "config",
    "resolver",
    "env",
    "environment",
    "json",
    "validation",
    "yup",
    "chalk"
  ],
  "devDependencies": {
    "@types/jest": "^29.5.2",
    "@types/js-yaml": "^4.0.5",
    "@types/lodash": "^4.14.195",
    "@types/node": "^20.3.1",
    "@typescript-eslint/eslint-plugin": "^5.60.0",
    "@typescript-eslint/parser": "^5.60.0",
    "ajv": "^8.12.0",
    "chalk": "^4.1.2",
    "eslint": "^8.43.0",
    "jest": "^29.5.0",
    "js-yaml": "^4.1.0",
    "rimraf": "^5.0.1",
    "ts-jest": "^29.1.0",
    "typescript": "^5.0.4",
    "yup": "^1.2.0"
  },
  "jest": {
    "preset": "ts-jest/presets/default",
    "testRegex": "\\.test\\.ts$",
    "moduleNameMapper": {
      "^~/(.+)$": "<rootDir>/src/$1"
    },
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "src/**/*.ts"
    ],
    "testPathIgnorePatterns": [
      "examples"
    ],
    "modulePathIgnorePatterns": [
      "examples"
    ],
    "transform": {
      "\\.ts$": [
        "ts-jest",
        {
          "tsconfig": "tests/tsconfig.json"
        }
      ]
    }
  }
}
